(()=>{"use strict";var e={426:(e,n,t)=>{t.d(n,{Z:()=>c});var a=t(537),r=t.n(a),i=t(645),o=t.n(i)()(r());o.push([e.id,"/* * {\n    border: red 1px solid;\n} */\nbody{\n    height: 100vh;\n    background-color: rgb(250, 250, 250)\n    /* background-color: rgb(255, 249, 234) */\n}\n\n#content{\n    height: 100%;\n    display: grid;\n    grid-template-rows: 1fr 6fr 1fr;\n}\n\nheader{\n    display: grid;\n    grid-template-columns: 1fr 4fr 1fr;\n}\n\nheader ul{\n    display: flex;\n    justify-content: space-evenly;\n    list-style-type: none;\n\n}\n\nli{\n    display: grid;\n    align-items: end;\n    justify-items: center;\n}\n\n\nli img{\n    height: 100px;\n    grid-row: 1/2;\n    grid-column: 1/2;\n}\n\nli h2{\n    grid-row: 1/2;\n    grid-column: 1/2;\n}\n\nmain{\n    display: grid;\n    grid-row: 2/3;\n    justify-items: center;\n\n}\n\nmain p{\n    grid-row: 2/3;\n}\n\nmain img{\n    height: 400px;\n    grid-row: 1/2;\n}\n\n.pieCard{\n    display: flex;\n    flex-direction: column;\n}\n\n.pieImg{\n    height: 200px;\n    width: 200px;\n}\n\n.steam{\n    transform: rotate(180deg);\n    height: 20px;\n    align-self: start;\n    display: none;\n    opacity: 50%;\n  \n}\n\n.active{\n    display: block;\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;;GAEG;AACH;IACI,aAAa;IACb,mCAAmC;IACnC,yCAAyC;AAC7C;;AAEA;IACI,YAAY;IACZ,aAAa;IACb,+BAA+B;AACnC;;AAEA;IACI,aAAa;IACb,kCAAkC;AACtC;;AAEA;IACI,aAAa;IACb,6BAA6B;IAC7B,qBAAqB;;AAEzB;;AAEA;IACI,aAAa;IACb,gBAAgB;IAChB,qBAAqB;AACzB;;;AAGA;IACI,aAAa;IACb,aAAa;IACb,gBAAgB;AACpB;;AAEA;IACI,aAAa;IACb,gBAAgB;AACpB;;AAEA;IACI,aAAa;IACb,aAAa;IACb,qBAAqB;;AAEzB;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,aAAa;IACb,aAAa;AACjB;;AAEA;IACI,aAAa;IACb,sBAAsB;AAC1B;;AAEA;IACI,aAAa;IACb,YAAY;AAChB;;AAEA;IACI,yBAAyB;IACzB,YAAY;IACZ,iBAAiB;IACjB,aAAa;IACb,YAAY;;AAEhB;;AAEA;IACI,cAAc;AAClB",sourcesContent:["/* * {\n    border: red 1px solid;\n} */\nbody{\n    height: 100vh;\n    background-color: rgb(250, 250, 250)\n    /* background-color: rgb(255, 249, 234) */\n}\n\n#content{\n    height: 100%;\n    display: grid;\n    grid-template-rows: 1fr 6fr 1fr;\n}\n\nheader{\n    display: grid;\n    grid-template-columns: 1fr 4fr 1fr;\n}\n\nheader ul{\n    display: flex;\n    justify-content: space-evenly;\n    list-style-type: none;\n\n}\n\nli{\n    display: grid;\n    align-items: end;\n    justify-items: center;\n}\n\n\nli img{\n    height: 100px;\n    grid-row: 1/2;\n    grid-column: 1/2;\n}\n\nli h2{\n    grid-row: 1/2;\n    grid-column: 1/2;\n}\n\nmain{\n    display: grid;\n    grid-row: 2/3;\n    justify-items: center;\n\n}\n\nmain p{\n    grid-row: 2/3;\n}\n\nmain img{\n    height: 400px;\n    grid-row: 1/2;\n}\n\n.pieCard{\n    display: flex;\n    flex-direction: column;\n}\n\n.pieImg{\n    height: 200px;\n    width: 200px;\n}\n\n.steam{\n    transform: rotate(180deg);\n    height: 20px;\n    align-self: start;\n    display: none;\n    opacity: 50%;\n  \n}\n\n.active{\n    display: block;\n}"],sourceRoot:""}]);const c=o},645:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",a=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),a&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),a&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,a,r,i){"string"==typeof e&&(e=[[null,e,void 0]]);var o={};if(a)for(var c=0;c<this.length;c++){var s=this[c][0];null!=s&&(o[s]=!0)}for(var d=0;d<e.length;d++){var l=[].concat(e[d]);a&&o[l[0]]||(void 0!==i&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=i),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),r&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=r):l[4]="".concat(r)),n.push(l))}},n}},537:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var a=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(a),i="/*# ".concat(r," */");return[n].concat([i]).join("\n")}return[n].join("\n")}},379:e=>{var n=[];function t(e){for(var t=-1,a=0;a<n.length;a++)if(n[a].identifier===e){t=a;break}return t}function a(e,a){for(var i={},o=[],c=0;c<e.length;c++){var s=e[c],d=a.base?s[0]+a.base:s[0],l=i[d]||0,p="".concat(d," ").concat(l);i[d]=l+1;var u=t(p),A={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==u)n[u].references++,n[u].updater(A);else{var h=r(A,a);a.byIndex=c,n.splice(c,0,{identifier:p,updater:h,references:1})}o.push(p)}return o}function r(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,r){var i=a(e=e||[],r=r||{});return function(e){e=e||[];for(var o=0;o<i.length;o++){var c=t(i[o]);n[c].references--}for(var s=a(e,r),d=0;d<i.length;d++){var l=t(i[d]);0===n[l].references&&(n[l].updater(),n.splice(l,1))}i=s}}},569:e=>{var n={};e.exports=function(e,t){var a=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!a)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");a.appendChild(t)}},216:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},565:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},795:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var a="";t.supports&&(a+="@supports (".concat(t.supports,") {")),t.media&&(a+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(a+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),a+=t.css,r&&(a+="}"),t.media&&(a+="}"),t.supports&&(a+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(a+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),n.styleTagTransform(a,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},589:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}}},n={};function t(a){var r=n[a];if(void 0!==r)return r.exports;var i=n[a]={id:a,exports:{}};return e[a](i,i.exports,t),i.exports}t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var a in n)t.o(n,a)&&!t.o(e,a)&&Object.defineProperty(e,a,{enumerable:!0,get:n[a]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),(()=>{var e;t.g.importScripts&&(e=t.g.location+"");var n=t.g.document;if(!e&&n&&(n.currentScript&&(e=n.currentScript.src),!e)){var a=n.getElementsByTagName("script");if(a.length)for(var r=a.length-1;r>-1&&!e;)e=a[r--].src}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=e})(),t.nc=void 0,(()=>{var e=t(379),n=t.n(e),a=t(795),r=t.n(a),i=t(569),o=t.n(i),c=t(565),s=t.n(c),d=t(216),l=t.n(d),p=t(589),u=t.n(p),A=t(426),h={};h.styleTagTransform=u(),h.setAttributes=s(),h.insert=o().bind(null,"head"),h.domAPI=r(),h.insertStyleElement=l(),n()(A.Z,h),A.Z&&A.Z.locals&&A.Z.locals;const m=t.p+"459a4e5fbba0c913501d.svg",f=t.p+"921e619398a37d81d6ec.svg",g=t.p+"02f0153057ebe2054035.png";function C(e){const n=document.createElement("main");if(n.innerHTML="","homeTab"===e){const e=function(){const e=document.createElement("main"),n=document.createElement("p");e.innerHTML="",e.id="main",n.id="mainContent",n.textContent="Von's famous pies have taken the Netherlands by storm, becoming a sensation in a country more known for its practical cuisine than its culinary adventures. These pies are a stark contrast to the typical Dutch fare, which, let's face it, often prioritizes function over flair. With the arrival of Von's Pies, the Dutch have been pleasantly ambushed by a whirlwind of flavors and food with actual texture, making many wonder how they ever settled for frikandel and herring.\n    Each pie from Von's Pies is a culinary rebellion against the ordinary. Where traditional Dutch meals are comfortably predictable, Von's Pies are daringly unpredictable. Their crusts are not just flaky; they're an audacious escape from the monotony of deepfried noodle blocks and potato. The fillings? A far cry from the usual stamppot, they are a blend of the finest ingredients that could make even the most loyal Dutch foodie question their allegiance to their national staples. \n    The variety at Von's Pies is another delightful shock to the Dutch palate. From pies bursting with exotic meats to those brimming with fruits sweeter than a Dutch summer, Von's Pies treats each creation as a piece of edible art. These pies have become the talk of the town, outshining even the most traditional Dutch snacks. It's no longer just about filling the belly; it's about feeding the soul with something unexpectedly extraordinary.\n    ";const t=new Image;return t.src=g,e.appendChild(t),e.appendChild(n),{frontImg:t,content:n}}();n.appendChild(e.frontImg),n.appendChild(e.content)}else if("menuTab"===e)n.appendChild(function(e,n){const t=document.createElement("div"),a=new Image,r=document.createElement("p");return t.classList.add("pieCard"),a.classList.add("pieImg"),a.src=e,r.textContent=n,t.appendChild(a),t.appendChild(r),t}(chickenPie,content));else if("contactTab"===e){const e=function(){const e=document.createElement("p");return e.textContent="We made it!",e}();console.log(e),n.appendChild(e)}return n}document.addEventListener("DOMContentLoaded",(function(){const e=document.querySelector("#content");e.appendChild(function(){const e=document.createElement("header"),n=document.createElement("h1"),t=document.createElement("ul"),a=document.createElement("li"),r=document.createElement("li"),i=document.createElement("li");function o(){const e=new Image;return e.src=m,e}function c(){const e=new Image;return e.src=f,e.classList.add("steam"),e}t.id="tabs",a.id="homeTab",r.id="menuTab",i.id="contactTab",a.classList.add("tab"),r.classList.add("tab"),i.classList.add("tab"),t.addEventListener("click",(e=>{const n=document.querySelector("#content"),t=e.target.closest("li");if(t.classList.contains("tab")){const e=t.id,r=C(e),i=document.querySelector("main");n.replaceChild(r,i),a=e,document.querySelectorAll(".tab").forEach((e=>{const n=e.querySelector(".steam");e.id===a?n.classList.add("active"):n.classList.remove("active")}))}var a}));const s=document.createElement("h2"),d=document.createElement("h2"),l=document.createElement("h2");return n.textContent="Von's Pies",t.appendChild(a),t.appendChild(r),t.appendChild(i),s.textContent="Home",d.textContent="Menu",l.textContent="Contact",a.appendChild(o()),r.appendChild(o()),i.appendChild(o()),a.appendChild(c()),r.appendChild(c()),i.appendChild(c()),a.appendChild(s),r.appendChild(d),i.appendChild(l),e.appendChild(n),e.appendChild(t),e}()),e.appendChild(C("homeTab")),e.appendChild(function(){const e=document.createElement("footer");return e.textContent="This is a test",e}())}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,