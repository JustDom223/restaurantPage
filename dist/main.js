(()=>{"use strict";var e={426:(e,n,t)=>{t.d(n,{Z:()=>c});var r=t(537),a=t.n(r),o=t(645),i=t.n(o)()(a());i.push([e.id,"/* * {\n    border: red 1px solid;\n} */\nbody{\n    height: 100vh;\n    background-color: rgb(250, 250, 250)\n    /* background-color: rgb(255, 249, 234) */\n}\n\n#content{\n    height: 100%;\n    display: grid;\n    grid-template-rows: 1fr 6fr 1fr;\n}\n\nheader{\n    display: grid;\n    grid-template-columns: 1fr 4fr 1fr;\n}\n\nheader ul{\n    display: flex;\n    justify-content: space-evenly;\n    list-style-type: none;\n\n}\n\nli{\n    display: grid;\n    align-items: end;\n    justify-items: center;\n}\n\n\nli img{\n    height: 100px;\n    grid-row: 1/2;\n    grid-column: 1/2;\n}\n\nli h2{\n    grid-row: 1/2;\n    grid-column: 1/2;\n}\n\nmain{\n    display: grid;\n    grid-row: 2/3;\n    justify-items: center;\n\n}\n\nmain p{\n    grid-row: 2/3;\n}\n\nmain img{\n    height: 400px;\n    grid-row: 1/2;\n}\n\n.pieCard{\n    display: flex;\n    flex-direction: column;\n}\n\n.pieImg{\n    height: 200px;\n    width: 200px;\n}\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;;GAEG;AACH;IACI,aAAa;IACb,mCAAmC;IACnC,yCAAyC;AAC7C;;AAEA;IACI,YAAY;IACZ,aAAa;IACb,+BAA+B;AACnC;;AAEA;IACI,aAAa;IACb,kCAAkC;AACtC;;AAEA;IACI,aAAa;IACb,6BAA6B;IAC7B,qBAAqB;;AAEzB;;AAEA;IACI,aAAa;IACb,gBAAgB;IAChB,qBAAqB;AACzB;;;AAGA;IACI,aAAa;IACb,aAAa;IACb,gBAAgB;AACpB;;AAEA;IACI,aAAa;IACb,gBAAgB;AACpB;;AAEA;IACI,aAAa;IACb,aAAa;IACb,qBAAqB;;AAEzB;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,aAAa;IACb,aAAa;AACjB;;AAEA;IACI,aAAa;IACb,sBAAsB;AAC1B;;AAEA;IACI,aAAa;IACb,YAAY;AAChB",sourcesContent:["/* * {\n    border: red 1px solid;\n} */\nbody{\n    height: 100vh;\n    background-color: rgb(250, 250, 250)\n    /* background-color: rgb(255, 249, 234) */\n}\n\n#content{\n    height: 100%;\n    display: grid;\n    grid-template-rows: 1fr 6fr 1fr;\n}\n\nheader{\n    display: grid;\n    grid-template-columns: 1fr 4fr 1fr;\n}\n\nheader ul{\n    display: flex;\n    justify-content: space-evenly;\n    list-style-type: none;\n\n}\n\nli{\n    display: grid;\n    align-items: end;\n    justify-items: center;\n}\n\n\nli img{\n    height: 100px;\n    grid-row: 1/2;\n    grid-column: 1/2;\n}\n\nli h2{\n    grid-row: 1/2;\n    grid-column: 1/2;\n}\n\nmain{\n    display: grid;\n    grid-row: 2/3;\n    justify-items: center;\n\n}\n\nmain p{\n    grid-row: 2/3;\n}\n\nmain img{\n    height: 400px;\n    grid-row: 1/2;\n}\n\n.pieCard{\n    display: flex;\n    flex-direction: column;\n}\n\n.pieImg{\n    height: 200px;\n    width: 200px;\n}\n"],sourceRoot:""}]);const c=i},645:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",r=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),r&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),r&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,r,a,o){"string"==typeof e&&(e=[[null,e,void 0]]);var i={};if(r)for(var c=0;c<this.length;c++){var s=this[c][0];null!=s&&(i[s]=!0)}for(var d=0;d<e.length;d++){var l=[].concat(e[d]);r&&i[l[0]]||(void 0!==o&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=o),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),a&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=a):l[4]="".concat(a)),n.push(l))}},n}},537:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),o="/*# ".concat(a," */");return[n].concat([o]).join("\n")}return[n].join("\n")}},379:e=>{var n=[];function t(e){for(var t=-1,r=0;r<n.length;r++)if(n[r].identifier===e){t=r;break}return t}function r(e,r){for(var o={},i=[],c=0;c<e.length;c++){var s=e[c],d=r.base?s[0]+r.base:s[0],l=o[d]||0,u="".concat(d," ").concat(l);o[d]=l+1;var p=t(u),h={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==p)n[p].references++,n[p].updater(h);else{var A=a(h,r);r.byIndex=c,n.splice(c,0,{identifier:u,updater:A,references:1})}i.push(u)}return i}function a(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,a){var o=r(e=e||[],a=a||{});return function(e){e=e||[];for(var i=0;i<o.length;i++){var c=t(o[i]);n[c].references--}for(var s=r(e,a),d=0;d<o.length;d++){var l=t(o[d]);0===n[l].references&&(n[l].updater(),n.splice(l,1))}o=s}}},569:e=>{var n={};e.exports=function(e,t){var r=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},565:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},795:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var a=void 0!==t.layer;a&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,a&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var o=t.sourceMap;o&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),n.styleTagTransform(r,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},589:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}}},n={};function t(r){var a=n[r];if(void 0!==a)return a.exports;var o=n[r]={id:r,exports:{}};return e[r](o,o.exports,t),o.exports}t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var r in n)t.o(n,r)&&!t.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:n[r]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),(()=>{var e;t.g.importScripts&&(e=t.g.location+"");var n=t.g.document;if(!e&&n&&(n.currentScript&&(e=n.currentScript.src),!e)){var r=n.getElementsByTagName("script");if(r.length)for(var a=r.length-1;a>-1&&!e;)e=r[a--].src}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=e})(),t.nc=void 0,(()=>{var e=t(379),n=t.n(e),r=t(795),a=t.n(r),o=t(569),i=t.n(o),c=t(565),s=t.n(c),d=t(216),l=t.n(d),u=t(589),p=t.n(u),h=t(426),A={};A.styleTagTransform=p(),A.setAttributes=s(),A.insert=i().bind(null,"head"),A.domAPI=a(),A.insertStyleElement=l(),n()(h.Z,A),h.Z&&h.Z.locals&&h.Z.locals;const m=t.p+"02f0153057ebe2054035.png",f=t.p+"459a4e5fbba0c913501d.svg";function g(e){const n=document.createElement("main");if(n.innerHTML="",console.log("we were meant to clear"),"homeTab"===e){const e=function(){const e=document.createElement("main"),n=document.createElement("p");e.innerHTML="",e.id="main",n.id="mainContent",n.textContent="Von's famous pies have taken the Netherlands by storm, becoming a sensation in a country more known for its practical cuisine than its culinary adventures. These pies are a stark contrast to the typical Dutch fare, which, let's face it, often prioritizes function over flair. With the arrival of Von's Pies, the Dutch have been pleasantly ambushed by a whirlwind of flavors and food with actual texture, making many wonder how they ever settled for frikandel and herring.\n    Each pie from Von's Pies is a culinary rebellion against the ordinary. Where traditional Dutch meals are comfortably predictable, Von's Pies are daringly unpredictable. Their crusts are not just flaky; they're an audacious escape from the monotony of deepfried noodle blocks and potato. The fillings? A far cry from the usual stamppot, they are a blend of the finest ingredients that could make even the most loyal Dutch foodie question their allegiance to their national staples. \n    The variety at Von's Pies is another delightful shock to the Dutch palate. From pies bursting with exotic meats to those brimming with fruits sweeter than a Dutch summer, Von's Pies treats each creation as a piece of edible art. These pies have become the talk of the town, outshining even the most traditional Dutch snacks. It's no longer just about filling the belly; it's about feeding the soul with something unexpectedly extraordinary.\n    ";const t=new Image;return t.src=m,e.appendChild(t),e.appendChild(n),{frontImg:t,content:n}}();n.appendChild(e.frontImg),n.appendChild(e.content),console.log(n)}else if("menuTab"===e)n.appendChild(function(e,n){const t=document.createElement("div"),r=new Image,a=document.createElement("p");return t.classList.add("pieCard"),r.classList.add("pieImg"),r.src=e,a.textContent=n,t.appendChild(r),t.appendChild(a),t}(chickenPie,content));else if("contactTab"===e){console.log("we made it");const e=function(){const e=document.createElement("p");return e.textContent="We made it!",e}();console.log(e),n.appendChild(e)}return n}document.addEventListener("DOMContentLoaded",(function(){const e=document.querySelector("#content");e.appendChild(function(){const e=document.createElement("header"),n=document.createElement("h1"),t=document.createElement("ul"),r=document.createElement("li"),a=document.createElement("li"),o=document.createElement("li");function i(){const e=new Image;return e.src=f,e}t.id="tabs",r.id="homeTab",a.id="menuTab",o.id="contactTab",r.classList.add("tab"),a.classList.add("tab"),o.classList.add("tab"),t.addEventListener("click",(e=>{const n=document.querySelector("#content"),t=e.target.closest("li");if(t.classList.contains("tab")){const e=t.id;console.log(e);const r=g(e),a=document.querySelector("main");a&&n.replaceChild(r,a)}}));const c=document.createElement("h2"),s=document.createElement("h2"),d=document.createElement("h2");return n.textContent="Von's Pies",t.appendChild(r),t.appendChild(a),t.appendChild(o),c.textContent="Home",s.textContent="Menu",d.textContent="Contact",r.appendChild(i()),a.appendChild(i()),o.appendChild(i()),r.appendChild(c),a.appendChild(s),o.appendChild(d),e.appendChild(n),e.appendChild(t),e}()),e.appendChild(g("homeTab")),e.appendChild(function(){const e=document.createElement("footer");return e.textContent="This is a test",e}())}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,